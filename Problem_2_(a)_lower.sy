;; The background theory is linear Real arithmetic
(set-logic LRA)

;; Name and signature of the function to be synthesized
(synth-fun Tf_lower ((l Real) (u Real)) Real
    
    ;; Declare the non-terminals that would be used in the grammar
    ((I Real) (B Bool))

    ;; Define the grammar for allowed implementations of max2
    ((I Real (l u 0 (- l) (- u) (+ I I) (- I I) (ite B I I)))
     (B Bool ((= I I) (> I I) (<= I I) (< I I) (>= I I))))
)



(declare-var l Real)
(declare-var u Real)

;; Define the semantic constraReals on the function
(constraint (=> (<= l u) (>= (Tf_lower l u) 0)))
(constraint (=> (<= l u) (>= (Tf_lower l u) l)))
(constraint (=> (and (<= l u) (>= l 0))
                    (= (Tf_lower l u) l)
            )
)
(constraint (=> (and (<= l u) (< l 0) (< u 0))
                    (> (Tf_lower l u) 0)
            )
)
(constraint (=> (and (<= l u) (<= u 0))
                    (= (Tf_lower l u) (- u))
            )
)

(check-synth)